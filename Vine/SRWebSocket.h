/*
 * This header is generated by weak_classdump 0.2
 * on Saturday, March 22, 2014 at 2:45:17 PM Central European Standard Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <NSStreamDelegate.h>

@interface SRWebSocket : NSObject <NSStreamDelegate> {
	int _webSocketVersion; 
	NSOperationQueue* _delegateOperationQueue; 
	struct dispatch_queue_s* _delegateDispatchQueue; 
	struct dispatch_queue_s* _workQueue; 
	NSMutableArray* _consumers; 
	NSInputStream* _inputStream; 
	NSOutputStream* _outputStream; 
	NSMutableData* _readBuffer; 
	unsigned _readBufferOffset; 
	NSMutableData* _outputBuffer; 
	unsigned _outputBufferOffset; 
	unsigned char _currentFrameOpcode; 
	unsigned long _currentFrameCount; 
	unsigned long _readOpCount; 
	unsigned _currentStringScanPosition; 
	NSMutableData* _currentFrameData; 
	NSString* _closeReason; 
	NSString* _secKey; 
	BOOL _pinnedCertFound; 
	unsigned char[4] _currentReadMaskKey; 
	unsigned long _currentReadMaskOffset; 
	BOOL _consumerStopped; 
	BOOL _closeWhenFinishedWriting; 
	BOOL _failed; 
	BOOL _secure; 
	NSURLRequest* _urlRequest; 
	struct __CFHTTPMessage* _receivedHTTPHeaders; 
	BOOL _sentClose; 
	BOOL _didFail; 
	int _closeCode; 
	BOOL _isPumping; 
	NSMutableSet* _scheduledRunloops; 
	SRWebSocket* _selfRetain; 
	NSArray* _requestedProtocols; 
	SRIOConsumerPool* _consumerPool; 
	id<SRWebSocketDelegate> _delegate; 
	NSURL* _url; 
	int _readyState; 
	NSString* _protocol; 
}
@property (assign,nonatomic) id<SRWebSocketDelegate> delegate; 				//@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) int readyState; 				//@synthesize readyState=_readyState - In the implementation block
@property (nonatomic,copy) NSURL* url; 				//@synthesize url=_url - In the implementation block
@property (nonatomic,copy) NSString* protocol; 				//@synthesize protocol=_protocol - In the implementation block
@property (nonatomic,retain) NSOperationQueue* delegateOperationQueue; 				//@synthesize delegateOperationQueue=_delegateOperationQueue - In the implementation block
@property (assign,nonatomic) struct dispatch_queue_s* delegateDispatchQueue; 				//@synthesize delegateDispatchQueue=_delegateDispatchQueue - In the implementation block
+(void)initialize;
-(void)_SR_commonInit;
-(id)initWithURLRequest:(id)arg1 protocols:(id)arg2;
-(id)initWithURL:(id)arg1 protocols:(id)arg2;
-(void)_initializeStreams;
-(BOOL)_checkHandshake:(struct __CFHTTPMessage*)arg1;
-(void)setReadyState:(int)arg1;
-(void)_readFrameNew;
-(void)_performDelegateBlock:(id)arg1;
-(void)_HTTPHeadersDidFinish;
-(void)_readHTTPHeader;
-(void)_readUntilHeaderCompleteWithCallback:(id)arg1;
-(void)_writeData:(id)arg1;
-(void)closeWithCode:(int)arg1 reason:(id)arg2;
-(void)_sendFrameWithOpcode:(int)arg1 data:(id)arg2;
-(void)assertOnWorkQueue;
-(void)_pumpWriting;
-(void)_closeWithProtocolError:(id)arg1;
-(void)_readFrameContinue;
-(void)handleCloseWithData:(id)arg1;
-(void)handlePing:(id)arg1;
-(void)handlePong;
-(void)_handleFrameWithData:(id)arg1 opCode:(int)arg2;
-(void)_addConsumerWithDataLength:(unsigned long)arg1 callback:(id)arg2 readToCurrentFrame:(BOOL)arg3 unmaskBytes:(BOOL)arg4;
-(void)_handleFrameHeader:(struct )arg1 curData:(id)arg2;
-(void)_addConsumerWithScanner:(id)arg1 callback:(id)arg2 dataLength:(unsigned long)arg3;
-(void)_pumpScanner;
-(void)_readUntilBytes:(const void**)arg1 length:(unsigned long)arg2 callback:(id)arg3;
-(void)_addConsumerWithScanner:(id)arg1 callback:(id)arg2;
-(BOOL)_innerPumpScanner;
-(void)didConnect;
-(void)setDelegateDispatchQueue:(struct dispatch_queue_s*)arg1;
-(void)setDelegateOperationQueue:(id)arg1;
-(void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
-(void)stream:(id)arg1 handleEvent:(unsigned)arg2;
-(void)send:(id)arg1;
-(void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
-(id)initWithURLRequest:(id)arg1;
-(void)dealloc;
-(void)setDelegate:(id)arg1;
-(void)close;
-(id)initWithURL:(id)arg1;
-(void)_connect;
-(void)_handleMessage:(id)arg1;
-(void).cxx_destruct;
-(void)open;
-(void)_disconnect;
-(void)_failWithError:(id)arg1;
@end