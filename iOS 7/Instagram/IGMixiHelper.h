/*
 * This header is generated by weak_classdump 0.2
 * on Sunday, June 22, 2014 at 3:34:17 AM Eastern European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <IGMixiAuthDelegate.h>
#import <IGServiceHelperProtocol.h>

@interface IGMixiHelper : NSObject <IGMixiAuthDelegate, IGServiceHelperProtocol> {
	NSString* _accessToken; 
	NSString* _serviceName; 
	NSString* _shortServiceName; 
}
@property (nonatomic,copy) NSString* accessToken; 				//@synthesize accessToken=_accessToken - In the implementation block
@property (nonatomic,copy) NSString* serviceName; 				//@synthesize serviceName=_serviceName - In the implementation block
@property (nonatomic,copy) NSString* shortServiceName; 				//@synthesize shortServiceName=_shortServiceName - In the implementation block
@property (assign,nonatomic) int currentPrivacySetting; 
+(id)sharedHelper;
-(id)sharingInfo;
-(void)logoutAndUnlink;
-(BOOL)isConfigurable;
-(BOOL)hasAdvancedOptions;
-(BOOL)isAvailableInCurrentLocale;
-(BOOL)supportsMediaType:(int)arg1;
-(BOOL)requiresLocationCoordinate;
-(void)reauthorizeIfNeeded;
-(BOOL)needsToReauthorize;
-(id)viewControllerForAdvancedOptions;
-(BOOL)hasEverBeenConfigured;
-(id)callbackURLString;
-(id)authURLString;
-(id)accessTokenKey;
-(BOOL)hasSelectedPrivacySetting;
-(id)getLabelForPrivacySetting:(int)arg1;
-(void)mixiAuthControllerLoginFailed:(id)arg1;
-(void)mixiAuthController:(id)arg1 didLoginWithCode:(id)arg2;
-(void)setAccessAndRefreshToken:(id)arg1 expirationInSeconds:(int)arg2 refreshToken:(id)arg3;
-(id)refreshToken;
-(void)onFetchTokenFailed;
-(void)fetchTokenFinished:(id)arg1;
-(void)reauthorizationNeedsLogin;
-(void)reauthorize;
-(id)getMixiConstantForPrivacySetting:(int)arg1;
-(void)setNeedsReauthorization;
-(void)reauthorizationFinished;
-(void)setShortServiceName:(id)arg1;
-(void)setAccessToken:(id)arg1;
-(void)setCurrentPrivacySetting:(int)arg1;
-(id)init;
-(void)logout;
-(void)setServiceName:(id)arg1;
-(id)clientID;
-(BOOL)isConfigured;
-(void).cxx_destruct;
@end