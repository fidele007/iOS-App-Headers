/*
 * This header is generated by weak_classdump 0.2
 * on Wednesday, April 30, 2014 at 2:25:36 PM Central European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <SPTPlayerObserver.h>

@interface SPTInboxModel : NSObject <SPTPlayerObserver> {
	BOOL _previousOfflineState; 
	SPPlaylistContext* _context; 
	id<SPTInboxModelDelegate> _delegate; 
	NSIndexPath* _activeIndexPath; 
	int _numberOfUnreadRows; 
	SPTPlayer* _player; 
	id<SPContextMenuActionsFactory> _contextMenuActionsFactory; 
	NSObject<SPTSessionState>* _sessionState; 
	SPTPlaylistBackendManager* _playlistBackendManager; 
	SPKVObservation* _unreadRowsObservation; 
	SPKVObservation* _rowsObservation; 
	SPKVObservation* _availableOfflineObservation; 
	SPKVObservation* _loginStateObservation; 
}
@property (nonatomic,retain) SPPlaylistContext* context; 				//@synthesize context=_context - In the implementation block
@property (assign,nonatomic,__weak) id<SPTInboxModelDelegate> delegate; 				//@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) NSIndexPath* activeIndexPath; 				//@synthesize activeIndexPath=_activeIndexPath - In the implementation block
@property (assign,nonatomic) int numberOfUnreadRows; 				//@synthesize numberOfUnreadRows=_numberOfUnreadRows - In the implementation block
@property (assign,getter=isAvailableOffline,nonatomic) BOOL availableOffline; 
@property (nonatomic,retain) SPTPlayer* player; 				//@synthesize player=_player - In the implementation block
@property (nonatomic,retain) id<SPContextMenuActionsFactory> contextMenuActionsFactory; 				//@synthesize contextMenuActionsFactory=_contextMenuActionsFactory - In the implementation block
@property (assign,nonatomic,__weak) NSObject<SPTSessionState>* sessionState; 				//@synthesize sessionState=_sessionState - In the implementation block
@property (nonatomic,retain) SPTPlaylistBackendManager* playlistBackendManager; 				//@synthesize playlistBackendManager=_playlistBackendManager - In the implementation block
@property (nonatomic,retain) SPKVObservation* unreadRowsObservation; 				//@synthesize unreadRowsObservation=_unreadRowsObservation - In the implementation block
@property (nonatomic,retain) SPKVObservation* rowsObservation; 				//@synthesize rowsObservation=_rowsObservation - In the implementation block
@property (nonatomic,retain) SPKVObservation* availableOfflineObservation; 				//@synthesize availableOfflineObservation=_availableOfflineObservation - In the implementation block
@property (nonatomic,retain) SPKVObservation* loginStateObservation; 				//@synthesize loginStateObservation=_loginStateObservation - In the implementation block
@property (assign,nonatomic) BOOL previousOfflineState; 				//@synthesize previousOfflineState=_previousOfflineState - In the implementation block
-(void)player:(id)arg1 stateDidChange:(id)arg2;
-(BOOL)isTrackPlayable:(id)arg1;
-(void)setAvailableOffline:(BOOL)arg1;
-(id)contextMenuTasksForRowAtIndexPath:(id)arg1;
-(void)removeRowAtIndexPath:(id)arg1;
-(void)markRowSeen:(BOOL)arg1 atIndexPath:(id)arg2;
-(BOOL)playRowAtIndexPath:(id)arg1;
-(void)unreadRowsCountChanged;
-(void)rowsDidChange;
-(void)loginStateChanged;
-(void)observeOfflineState;
-(unsigned)offlineSyncStatusFromOfflineState:(int)arg1;
-(void)setAvailableOfflineObservation:(id)arg1;
-(void)availableOfflineChanged;
-(void)setNumberOfUnreadRows:(int)arg1;
-(void)setPreviousOfflineState:(BOOL)arg1;
-(id)indexPathForTrackIndex:(int)arg1;
-(void)setActiveIndexPath:(id)arg1;
-(void)setContextMenuActionsFactory:(id)arg1;
-(void)setPlaylistBackendManager:(id)arg1;
-(void)setUnreadRowsObservation:(id)arg1;
-(void)setRowsObservation:(id)arg1;
-(void)setLoginStateObservation:(id)arg1;
-(id)initWithContext:(id)arg1 player:(id)arg2 contextMenuFactory:(id)arg3 sessionState:(id)arg4 playlistBackendManager:(id)arg5;
-(void)itemDidChange:(id)arg1 context:(id)arg2;
-(id)playOriginSource;
-(id)itemAtIndexPath:(id)arg1;
-(void)setSessionState:(id)arg1;
-(void)dealloc;
-(void)setDelegate:(id)arg1;
-(void)setContext:(id)arg1;
-(unsigned)numberOfRows;
-(void)load;
-(void).cxx_destruct;
-(void)setPlayer:(id)arg1;
@end