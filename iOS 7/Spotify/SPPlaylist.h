/*
 * This header is generated by weak_classdump 0.2
 * on Wednesday, April 30, 2014 at 2:26:05 PM Central European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <SPOfflineStateProtocol.h>
#import <PlaylistFolderVCTableContentItem.h>
#import <SPPlaylistContainerItem.h>

@interface SPPlaylist : SPObject <SPOfflineStateProtocol, PlaylistFolderVCTableContentItem, SPPlaylistContainerItem> {
}
@property (nonatomic,copy) BOOL isSpecial; 
@property (assign,getter=isPublished,nonatomic) BOOL published; 
@property (nonatomic,copy) BOOL isAvailableOffline; 
@property (assign,nonatomic) BOOL makeAvailableOffline; 
@property (nonatomic,copy) int offlineState; 
@property (nonatomic,copy) float offlineProgress; 
@property (nonatomic,copy) SPPlaylistOfflineSyncStatus* offlineSyncStatus; 
@property (nonatomic,copy) NSString* name; 
@property (nonatomic,copy) SPURL* link; 
@property (nonatomic,copy) NSString* ownerCanonicalUsername; 
@property (nonatomic,copy) NSString* freeformDescription; 
@property (nonatomic,copy) NSString* imageIdent; 
@property (nonatomic,copy) SPURL* URL; 
@property (assign,nonatomic) BOOL collaborative; 
@property (nonatomic,copy) BOOL isOwnedBySelf; 
@property (nonatomic,copy) BOOL isLoading; 
@property (nonatomic,copy) unsigned synchronizationState; 
@property (nonatomic,copy) BOOL isWriteable; 
@property (nonatomic,copy) BOOL isSeparator; 
@property (nonatomic,copy) BOOL isStarred; 
@property (nonatomic,copy) BOOL isToplist; 
@property (nonatomic,copy) BOOL isInbox; 
@property (nonatomic,copy) BOOL isLocalFiles; 
@property (nonatomic,copy) BOOL isSubscribable; 
@property (nonatomic,copy) unsigned nodeType; 
+(id)playlistWithPlaylist:(struct Playlist*)arg1;
+(id)keyPathsForValuesAffectingSpecialName;
+(id)KVOCompliantKeyPaths;
+(id)playlist;
-(id)mutableTracks;
-(id)imageLink;
-(struct RefCountedInterface*)cpp;
-(id)userThatAddedTrackAtIndex:(unsigned)arg1;
-(unsigned)countOfTracks;
-(id)specialName;
-(int)countOfTracksLocallyPlayable;
-(int)countOfAvailableTracksIncludingLocal:(BOOL)arg1;
-(void)setMakeAvailableOffline:(BOOL)arg1;
-(void)setCollaborative:(BOOL)arg1;
-(BOOL)trackIsSeenAtIndex:(unsigned)arg1;
-(id)playlistFolderCellReuseIdentifierForEditing:(BOOL)arg1;
-(Class)playlistFolderCellClassForEditing:(BOOL)arg1;
-(BOOL)shouldUseSeparatorCellForEditing:(BOOL)arg1;
-(id)objectInTracksAtIndex:(unsigned)arg1;
-(void)removeCallbacks;
-(void)setObservedChangeSource:(int)arg1;
-(void)setObservedAttributeChangeKey:(id)arg1;
-(void)addCallbacks;
-(void)insertObject:(id)arg1 inTracksAtIndex:(unsigned)arg2;
-(void)removeObjectFromTracksAtIndex:(unsigned)arg1;
-(id)messageForTrackAtIndex:(unsigned)arg1;
-(id)dateAddedForTrackAtIndex:(unsigned)arg1;
-(void)setFreeformDescription:(id)arg1;
-(void)setImageIdent:(id)arg1;
-(void)setTrackIsSeen:(BOOL)arg1 atIndex:(unsigned)arg2;
-(void)setTrackCreationTimeWithInternalSource:(id)arg1 userThatAddedTrack:(id)arg2 forTrackAtIndex:(unsigned)arg3;
-(void)setMessage:(id)arg1 forTrackAtIndex:(unsigned)arg2;
-(int)observedChangeSource;
-(id)observedAttributeChangeKey;
-(id)attributeForKey:(id)arg1 atIndex:(unsigned)arg2;
-(void)setValue:(id)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3;
-(id)attributeKeysAtIndex:(unsigned)arg1;
-(id)mutableArrayValueForKey:(id)arg1;
-(void)setPublished:(BOOL)arg1;
-(struct Playlist*)playlist;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1;
-(id)description;
-(void)setName:(id)arg1;
-(void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned)arg3 context:(void*)arg4;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
@end