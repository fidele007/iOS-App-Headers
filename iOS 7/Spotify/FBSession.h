/*
 * This header is generated by weak_classdump 0.2
 * on Wednesday, April 30, 2014 at 2:26:02 PM Central European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <FBLoginDialogDelegate.h>

@interface FBSession : NSObject <FBLoginDialogDelegate> {
	NSString* _urlSchemeSuffix; 
	BOOL _isInStateTransition; 
	BOOL _isFacebookLoginToken; 
	BOOL _isOSIntegratedFacebookLoginToken; 
	int _loginTypeOfPendingOpenUrlCallback; 
	int _defaultDefaultAudience; 
	NSString* _appID; 
	NSArray* _permissions; 
	int _loginType; 
	int _state; 
	NSString* _accessToken; 
	NSDate* _expirationDate; 
	FBSessionTokenCachingStrategy* _tokenCachingStrategy; 
	NSDate* _refreshDate; 
	NSDate* _attemptedRefreshDate; 
	FBLoginDialog* _loginDialog; 
	NSThread* _affinitizedThread; 
	id _loginHandler; 
	id _reauthorizeHandler; 
	NSArray* _reauthorizePermissions; 
}
@property (copy) BOOL isOpen; 
@property (assign) int state; 				//@synthesize state=_state - In the implementation block
@property (copy) NSString* appID; 				//@synthesize appID=_appID - In the implementation block
@property (copy) NSString* urlSchemeSuffix; 
@property (copy) NSString* accessToken; 				//@synthesize accessToken=_accessToken - In the implementation block
@property (copy) NSDate* expirationDate; 				//@synthesize expirationDate=_expirationDate - In the implementation block
@property (copy) NSArray* permissions; 				//@synthesize permissions=_permissions - In the implementation block
@property (assign) int loginType; 				//@synthesize loginType=_loginType - In the implementation block
@property (retain) FBSessionTokenCachingStrategy* tokenCachingStrategy; 				//@synthesize tokenCachingStrategy=_tokenCachingStrategy - In the implementation block
@property (copy) NSDate* refreshDate; 				//@synthesize refreshDate=_refreshDate - In the implementation block
@property (copy) NSDate* attemptedRefreshDate; 				//@synthesize attemptedRefreshDate=_attemptedRefreshDate - In the implementation block
@property (copy) id loginHandler; 				//@synthesize loginHandler=_loginHandler - In the implementation block
@property (copy) id reauthorizeHandler; 				//@synthesize reauthorizeHandler=_reauthorizeHandler - In the implementation block
@property (copy) NSArray* reauthorizePermissions; 				//@synthesize reauthorizePermissions=_reauthorizePermissions - In the implementation block
@property (copy) NSString* appBaseUrl; 
@property (retain) FBLoginDialog* loginDialog; 				//@synthesize loginDialog=_loginDialog - In the implementation block
@property (retain) NSThread* affinitizedThread; 				//@synthesize affinitizedThread=_affinitizedThread - In the implementation block
+(id)activeSession;
+(BOOL)openActiveSessionWithPermissions:(id)arg1 allowLoginUI:(BOOL)arg2 completionHandler:(id)arg3;
+(id)activeSessionIfOpen;
+(id)defaultAppID;
+(void)renewSystemAuthorization;
+(BOOL)areRequiredPermissions:(id)arg1 aSubsetOfPermissions:(id)arg2;
+(id)errorLoginFailedWithReason:(id)arg1 errorCode:(id)arg2 innerError:(id)arg3;
+(BOOL)openActiveSessionWithPermissions:(id)arg1 allowLoginUI:(BOOL)arg2 allowSystemAccount:(BOOL)arg3 isRead:(BOOL)arg4 defaultAudience:(int)arg5 completionHandler:(id)arg6;
+(id)sessionStateDescription:(int)arg1;
+(BOOL)areAllPermissionsReadPermissions:(id)arg1;
+(id)addBasicInfoPermission:(id)arg1;
+(id)expirationDateFromExpirationTimeString:(id)arg1;
+(void)validateRequestForPermissions:(id)arg1 defaultAudience:(int)arg2 allowSystemAccount:(BOOL)arg3 isRead:(BOOL)arg4;
+(BOOL)logIfFoundUnexpectedPermissions:(id)arg1 isRead:(BOOL)arg2;
+(BOOL)isPublishPermission:(id)arg1;
+(void)setDefaultAppID:(id)arg1;
+(void)deleteFacebookCookies;
+(BOOL)openActiveSessionWithAllowLoginUI:(BOOL)arg1;
+(BOOL)openActiveSessionWithReadPermissions:(id)arg1 allowLoginUI:(BOOL)arg2 completionHandler:(id)arg3;
+(BOOL)openActiveSessionWithPublishPermissions:(id)arg1 defaultAudience:(int)arg2 allowLoginUI:(BOOL)arg3 completionHandler:(id)arg4;
+(BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+(id)setActiveSession:(id)arg1;
-(void)closeAndClearTokenInformation;
-(BOOL)handleOpenURL:(id)arg1;
-(void)fbDialogLogin:(id)arg1 expirationDate:(id)arg2;
-(void)fbDialogNotLogin:(BOOL)arg1;
-(void)closeAndClearTokenInformation:(id)arg1;
-(BOOL)shouldExtendAccessToken;
-(void)refreshAccessToken:(id)arg1 expirationDate:(id)arg2;
-(id)initWithAppID:(id)arg1 permissions:(id)arg2 defaultAudience:(int)arg3 urlSchemeSuffix:(id)arg4 tokenCacheStrategy:(id)arg5;
-(void)setTokenCachingStrategy:(id)arg1;
-(void)setAttemptedRefreshDate:(id)arg1;
-(void)setRefreshDate:(id)arg1;
-(void)setLoginType:(int)arg1;
-(void)setAffinitizedThread:(id)arg1;
-(BOOL)transitionToState:(int)arg1 andUpdateToken:(id)arg2 andExpirationDate:(id)arg3 shouldCache:(BOOL)arg4 loginType:(int)arg5;
-(void)openWithBehavior:(int)arg1 completionHandler:(id)arg2;
-(void)setLoginHandler:(id)arg1;
-(void)authorizeWithPermissions:(id)arg1 behavior:(int)arg2 defaultAudience:(int)arg3 isReauthorize:(BOOL)arg4;
-(void)transitionAndCallHandlerWithState:(int)arg1 error:(id)arg2 token:(id)arg3 expirationDate:(id)arg4 shouldCache:(BOOL)arg5 loginType:(int)arg6;
-(void)reauthorizeWithPermissions:(id)arg1 isRead:(BOOL)arg2 behavior:(int)arg3 defaultAudience:(int)arg4 completionHandler:(id)arg5;
-(BOOL)handleOpenURLPreOpen:(id)arg1 accessToken:(id)arg2 loginType:(int)arg3;
-(BOOL)handleOpenURLReauthorize:(id)arg1 accessToken:(id)arg2;
-(void)callReauthorizeHandlerAndClearState:(id)arg1;
-(void)authorizeWithPermissions:(id)arg1 defaultAudience:(int)arg2 integratedAuth:(BOOL)arg3 FBAppAuth:(BOOL)arg4 safariAuth:(BOOL)arg5 fallback:(BOOL)arg6 isReauthorize:(BOOL)arg7;
-(void)authorizeUsingSystemAccountStore:(id)arg1 accountType:(id)arg2 permissions:(id)arg3 defaultAudience:(int)arg4 isReauthorize:(BOOL)arg5;
-(void)setLoginDialog:(id)arg1;
-(void)completeReauthorizeWithAccessToken:(id)arg1 expirationDate:(id)arg2 permissions:(id)arg3;
-(void)setReauthorizePermissions:(id)arg1;
-(void)setReauthorizeHandler:(id)arg1;
-(void)reauthorizeWithPermissions:(id)arg1 behavior:(int)arg2 completionHandler:(id)arg3;
-(void)reauthorizeWithReadPermissions:(id)arg1 completionHandler:(id)arg2;
-(void)reauthorizeWithPublishPermissions:(id)arg1 defaultAudience:(int)arg2 completionHandler:(id)arg3;
-(void)handleDidBecomeActive;
-(void)setUrlSchemeSuffix:(id)arg1;
-(id)initWithAppID:(id)arg1 permissions:(id)arg2 urlSchemeSuffix:(id)arg3 tokenCacheStrategy:(id)arg4;
-(id)initWithPermissions:(id)arg1;
-(void)setPermissions:(id)arg1;
-(void)setAccessToken:(id)arg1;
-(void)dealloc;
-(id)description;
-(void)setState:(int)arg1;
-(void)close;
-(void)openWithCompletionHandler:(id)arg1;
-(void)setAppID:(id)arg1;
-(void)setExpirationDate:(id)arg1;
@end