/*
 * This header is generated by weak_classdump 0.2
 * on Wednesday, April 30, 2014 at 2:21:01 PM Central European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <SPCollectionInternal.h>

@interface SPCollection : NSObject <SPCollectionInternal> {
	SessionController* _sessionController; 
	CollectionAllTracksModel* _allTracksModel; 
	SPCollectionOfflineController* _offlineController; 
	NSPointerArray* _observers; 
	SPCollectionController* _collectionController; 
}
@property (nonatomic,retain) NSPointerArray* observers; 				//@synthesize observers=_observers - In the implementation block
@property (nonatomic,retain) SPCollectionController* collectionController; 				//@synthesize collectionController=_collectionController - In the implementation block
@property (nonatomic,copy) NSString* username; 
@property (nonatomic,copy) SessionController* sessionController; 				//@synthesize sessionController=_sessionController - In the implementation block
@property (nonatomic,copy) SPCollectionOfflineController* offlineController; 
@property (nonatomic,copy) NSObject<SPCollectionArtistList>* artists; 
@property (nonatomic,copy) NSObject<SPCollectionAlbumList>* albums; 
@property (nonatomic,copy) NSObject<SPMetadataObjectList>* tracks; 
-(id)initWithSessionController:(id)arg1;
-(id)objectFromLink:(id)arg1;
-(int)countOfTracksInCollectionForArtistLink:(id)arg1;
-(int)countOfAlbumsInCollectionForArtistLink:(id)arg1;
-(int)countOfTracksInCollectionForAlbumLink:(id)arg1;
-(void)setCollectionController:(id)arg1;
-(id)modelForArtist:(id)arg1;
-(id)modelForAlbum:(id)arg1;
-(id)allTracksForArtistLink:(id)arg1;
-(id)allTracksForAlbumLink:(id)arg1;
-(id)allTracksInCollection;
-(void)addToCollection:(id)arg1 source:(id)arg2;
-(void)removeFromCollection:(id)arg1 source:(id)arg2;
-(BOOL)existsInCollection:(id)arg1;
-(void)unload;
-(BOOL)hasArtists;
-(BOOL)isEmpty;
-(void)removeObserver:(id)arg1;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
-(void)setObservers:(id)arg1;
-(void)addObserver:(id)arg1;
-(void)saveState;
-(void).cxx_destruct;
@end