/*
 * This header is generated by weak_classdump 0.2
 * on Monday, June 23, 2014 at 9:08:53 PM Eastern European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <AVAudioRecorderDelegate.h>
#import <AVAudioSessionDelegate.h>
#import <VoiceTalkControlDelegate.h>
#import <NLVoiceRecordViewDelegate.h>

@interface VoiceMessageController : NSObject <AVAudioRecorderDelegate, AVAudioSessionDelegate, VoiceTalkControlDelegate, NLVoiceRecordViewDelegate> {
	BOOL isRecording; 
	BOOL isLoading; 
	BOOL _isPlaying; 
	BOOL isCancelled; 
	BOOL isShowing; 
	BOOL observingStatus; 
	BOOL _useCall; 
	BOOL _recordingCancelled; 
	UIViewController* viewController; 
	VoiceTalkControl* voipControl; 
	NLVoiceRecordView* voiceControl; 
	NSURL* soundFileURL; 
	AVAudioRecorder* soundRecorder; 
	AVAudioRecorder* oldSoundRecorder; 
	struct dispatch_source_s* _timer; 
	AVPlayer* audioPlayer; 
	AVPlayerItem* playerItem; 
	id timeObserver; 
	TalkMessageObject* _messageObject; 
	NSMutableSet* recorderObservers; 
	NSMutableSet* playerObservers; 
	NSString* audioCategoryBackup; 
	int _controlType; 
	NLVoiceTouchBlockView* _blockUserTouchView; 
	UIButton* _recognizerHitEventOnTextView; 
	double currentTime; 
	double _duration; 
	double currentPlayTime; 
}
@property (assign,nonatomic) UIViewController* viewController; 
@property (assign,nonatomic) BOOL isLoading; 
@property (assign,nonatomic) BOOL isPlaying; 				//@synthesize isPlaying=_isPlaying - In the implementation block
@property (assign,nonatomic) BOOL isCancelled; 
@property (assign,nonatomic) BOOL isRecording; 
@property (assign,nonatomic) BOOL isShowing; 
@property (assign,nonatomic) int controlType; 				//@synthesize controlType=_controlType - In the implementation block
@property (nonatomic,retain) TalkMessageObject* messageObject; 				//@synthesize messageObject=_messageObject - In the implementation block
@property (assign,nonatomic) double duration; 				//@synthesize duration=_duration - In the implementation block
@property (assign,nonatomic) double currentPlayTime; 
@property (assign,nonatomic) BOOL useCall; 				//@synthesize useCall=_useCall - In the implementation block
@property (nonatomic,retain) NLVoiceRecordView* voiceControl; 
@property (nonatomic,retain) VoiceTalkControl* voipControl; 
@property (nonatomic,retain) NLVoiceTouchBlockView* blockUserTouchView; 				//@synthesize blockUserTouchView=_blockUserTouchView - In the implementation block
@property (nonatomic,retain) NSURL* soundFileURL; 
@property (nonatomic,retain) AVAudioRecorder* soundRecorder; 
@property (nonatomic,retain) AVAudioRecorder* oldSoundRecorder; 
@property (assign,nonatomic) struct dispatch_source_s* timer; 				//@synthesize timer=_timer - In the implementation block
@property (assign,nonatomic) double currentTime; 
@property (nonatomic,retain) AVPlayer* audioPlayer; 
@property (nonatomic,retain) AVPlayerItem* playerItem; 
@property (assign,nonatomic) id timeObserver; 
@property (assign,nonatomic) BOOL observingStatus; 
@property (nonatomic,retain) NSMutableSet* recorderObservers; 
@property (nonatomic,retain) NSMutableSet* playerObservers; 
@property (nonatomic,retain) NSString* audioCategoryBackup; 
@property (assign,nonatomic) BOOL recordingCancelled; 				//@synthesize recordingCancelled=_recordingCancelled - In the implementation block
@property (nonatomic,retain) UIButton* recognizerHitEventOnTextView; 				//@synthesize recognizerHitEventOnTextView=_recognizerHitEventOnTextView - In the implementation block
+(void)updateAudioStatus;
+(short)checkDeviceStatus;
-(id)messageViewController;
-(void)changeToOrientation:(int)arg1;
-(void)setMessageObject:(id)arg1;
-(void)prepareURLAndPlayWithMessage:(id)arg1;
-(void)showControls:(int)arg1;
-(void)voiceTalkControlClosed:(id)arg1;
-(void)voiceTalkControlCallButtonTapped:(id)arg1;
-(void)setAudioCategoryBackup:(id)arg1;
-(void)removePlayerObservers;
-(void)removeRecorderObservers;
-(void)setIsRecording:(BOOL)arg1;
-(BOOL)isActivatedPlayer;
-(void)stopAndUpdateView;
-(void)setSoundFileURL:(id)arg1;
-(void)setAudioSessioinCagetory;
-(void)setSoundRecorder:(id)arg1;
-(void)addRecorderObservers;
-(void)cancelTimer;
-(void)unBlockUserTouch;
-(void)setRecordingCancelled:(BOOL)arg1;
-(void)sendAudioFile;
-(id)timeString;
-(void)setCurrentPlayTime:(double)arg1;
-(void)setControlType:(int)arg1;
-(void)setIsShowing:(BOOL)arg1;
-(void)finishRecording;
-(void)playAudioAtURL:(id)arg1;
-(void)setObservingStatus:(BOOL)arg1;
-(void)setAudioPlayer:(id)arg1;
-(void)setTimeObserver:(id)arg1;
-(void)addPlayerObservers;
-(void)voiceRecordViewDidBeginRecording:(id)arg1;
-(void)voiceRecordViewlDidEndRecording:(id)arg1;
-(void)voiceRecordViewDidCancelRecording:(id)arg1;
-(void)setVoipControl:(id)arg1;
-(void)setVoiceControl:(id)arg1;
-(void)setOldSoundRecorder:(id)arg1;
-(void)setRecorderObservers:(id)arg1;
-(void)setPlayerObservers:(id)arg1;
-(void)setUseCall:(BOOL)arg1;
-(void)setBlockUserTouchView:(id)arg1;
-(void)setRecognizerHitEventOnTextView:(id)arg1;
-(void)beginRecording;
-(void)setCurrentTime:(double)arg1;
-(void)setPlayerItem:(id)arg1;
-(void)dealloc;
-(void)setDuration:(double)arg1;
-(void)setProximityMonitoringEnabled:(BOOL)arg1;
-(void)setEnabled:(BOOL)arg1;
-(void)setViewController:(id)arg1;
-(void)cancel;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
-(void)updateView;
-(void)hideControls;
-(void)stop;
-(void)setTimer:(struct dispatch_source_s*)arg1;
-(void)setIsLoading:(BOOL)arg1;
-(void)updateTime;
-(void).cxx_destruct;
-(void)setIsPlaying:(BOOL)arg1;
-(void)setIsCancelled:(BOOL)arg1;
@end