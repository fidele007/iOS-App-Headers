/*
 * This header is generated by weak_classdump 0.2
 * on Monday, June 23, 2014 at 9:10:18 PM Eastern European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <FriendsPickerViewControllerDelegate.h>
#import <UIScrollViewDelegate.h>
#import <UIAlertViewDelegate.h>
#import <LineNavigationControllerDelegate.h>
#import <StickerShopSegmentControllerDelegate.h>
#import <UISearchBarDelegate.h>
#import <UISearchDisplayDelegate.h>

@interface StickerShopViewController : NLTableViewController <FriendsPickerViewControllerDelegate, UIScrollViewDelegate, UIAlertViewDelegate, LineNavigationControllerDelegate, StickerShopSegmentControllerDelegate, UISearchBarDelegate, UISearchDisplayDelegate> {
	StickerShopSegmentController* segmentControl_; 
	UITableViewCell* segmentControlCell_; 
	UITableViewCell* emptyCell_; 
	LineProductList* popularProductList_; 
	LineProductList* newestProductList_; 
	LineProductList* eventProductList_; 
	LineProductList* categoryProductList_; 
	LineProductList* filteredProductList_; 
	NSArray* categoryTitleList_; 
	LineProductCategory* currentSelectedCategory_; 
	long long currentSelectedCategoryId_; 
	long long newItemPublishedSince_; 
	long long eventItemPublishedSince_; 
	UIActivityIndicatorView* act_; 
	UITableViewCell* bannerCell_; 
	UILabel* noResultLabel_; 
	UIImageView* noEventImageView_; 
	unsigned BannerSeq; 
	BOOL _isAppearing; 
	BOOL[4] _loggedBannerViewEvent; 
	BOOL isFetchMoreLoading; 
	BOOL isAlertViewShown; 
	int popularFetchOffset; 
	int newestFetchOffset; 
	int eventFetchOffset; 
	int categoryFetchOffset; 
	BOOL isDownloadingPopularList_; 
	BOOL isDownloadingNewestList_; 
	BOOL isDownloadingEventList_; 
	BOOL isDownloadingCategoryItemtList_; 
	BOOL isDownloadingCategoryList_; 
	LEGYRequestResponseHandler* request_; 
	BOOL hasResults_; 
	unsigned searchOffset_; 
	BOOL reachedEndOfResults_; 
	NSString* searchTerm_; 
	NSTimer* timer_; 
	double searchInterval_; 
	BOOL searchResultsTableViewHasLoaded; 
	NSMutableArray* popularList; 
	NSMutableArray* newestList; 
	NSMutableArray* eventList; 
	NSMutableArray* categoryList; 
	NSMutableArray* filteredList; 
	int bannerLinkType; 
	NSString* bannerTargetPath; 
	unsigned selectedIndex; 
	LineProduct* selectedProduct; 
	UISearchDisplayController* searchDisplayController_; 
	UISearchBar* searchBar_; 
	UIImage* _bannerErrorImage; 
}
@property (nonatomic,retain) NSMutableArray* popularList; 
@property (nonatomic,retain) NSMutableArray* newestList; 
@property (nonatomic,retain) NSMutableArray* eventList; 
@property (nonatomic,retain) NSMutableArray* categoryList; 
@property (nonatomic,retain) NSMutableArray* filteredList; 
@property (assign,nonatomic) int bannerLinkType; 
@property (nonatomic,retain) NSString* bannerTargetPath; 
@property (assign,nonatomic) unsigned selectedIndex; 
@property (nonatomic,retain) LineProduct* selectedProduct; 
@property (nonatomic,retain) UIImage* bannerErrorImage; 				//@synthesize bannerErrorImage=_bannerErrorImage - In the implementation block
@property (nonatomic,retain) UISearchDisplayController* searchDisplayController; 
@property (nonatomic,retain) UISearchBar* searchBar; 
-(void)friendsPickerViewController:(id)arg1 didFinishPickingItems:(id)arg2;
-(void)changeSegment:(id)arg1;
-(BOOL)shouldDismissViewController;
-(void)setupAtInit;
-(void)onTapMyStickersButton:(id)arg1;
-(BOOL)isShowingItemsInCategory;
-(void)setupTitleByCategory;
-(void)clearNewBadge:(id)arg1;
-(void)clearEventBadge:(id)arg1;
-(void)openBanner:(id)arg1;
-(void)loadCategoryStickerPackages;
-(void)loadPopularStickerPackages;
-(void)loadNewlyStickerPackages;
-(void)loadEventStickerPackages;
-(void)loadCategoryStickerLists;
-(void)logBannerViewEvent;
-(BOOL)isSearchTableView:(id)arg1;
-(id)productListForTable:(id)arg1;
-(id)productListArrayForTable:(id)arg1;
-(BOOL)isShowingCategoryList;
-(void)showNoResultLabelByError;
-(BOOL)isDownloadingListForTable:(id)arg1;
-(BOOL)isSegmentControlRow:(id)arg1;
-(BOOL)isBannerRow:(id)arg1;
-(int)dataIndexFromIndexPath:(id)arg1;
-(void)setBannerTargetPath:(id)arg1;
-(void)setBannerLinkType:(int)arg1;
-(int)isDataIndex:(id)arg1;
-(void)setSelectedProduct:(id)arg1;
-(void)addFooterViewAtThisTable:(id)arg1;
-(void)setPopularList:(id)arg1;
-(void)setLoadingFooterViewAtThisTable:(id)arg1;
-(void)setNewestList:(id)arg1;
-(void)setEventList:(id)arg1;
-(void)setCategoryList:(id)arg1;
-(void)updateProduct:(id)arg1 forTableView:(id)arg2;
-(void)setFilteredList:(id)arg1;
-(void)resetSearchState;
-(void)tappedRightButton:(id)arg1;
-(id)initWithSegment:(unsigned)arg1;
-(id)initWithCategoryId:(long long)arg1;
-(void)stickerPackagesChanged;
-(void)updateProduct:(id)arg1;
-(void)setBannerErrorImage:(id)arg1;
-(id)initWithCategory:(id)arg1;
-(void)loadMore;
-(void)dealloc;
-(void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
-(float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
-(void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
-(id)description;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
-(void)scrollViewDidEndDecelerating:(id)arg1;
-(int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
-(id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
-(int)numberOfSectionsInTableView:(id)arg1;
-(int)preferredStatusBarStyle;
-(BOOL)prefersStatusBarHidden;
-(void)didReceiveMemoryWarning;
-(void)alertView:(id)arg1 didDismissWithButtonIndex:(int)arg2;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
-(void)viewWillAppear:(BOOL)arg1;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2;
-(void)viewDidLoad;
-(void)setSearchDisplayController:(id)arg1;
-(void)viewDidUnload;
-(void)viewDidAppear:(BOOL)arg1;
-(void)viewWillDisappear:(BOOL)arg1;
-(void)viewDidDisappear:(BOOL)arg1;
-(void)setSelectedIndex:(unsigned)arg1;
-(void)searchBarCancelButtonClicked:(id)arg1;
-(BOOL)searchBar:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
-(void)searchDisplayController:(id)arg1 willUnloadSearchResultsTableView:(id)arg2;
-(void)searchDisplayControllerDidBeginSearch:(id)arg1;
-(void)searchDisplayControllerDidEndSearch:(id)arg1;
-(void)searchDisplayControllerWillBeginSearch:(id)arg1;
-(void)searchDisplayControllerWillEndSearch:(id)arg1;
-(BOOL)searchDisplayController:(id)arg1 shouldReloadTableForSearchString:(id)arg2;
-(void)searchDisplayController:(id)arg1 didLoadSearchResultsTableView:(id)arg2;
-(void)setSearchBar:(id)arg1;
-(void).cxx_destruct;
-(void)cancelAction;
@end