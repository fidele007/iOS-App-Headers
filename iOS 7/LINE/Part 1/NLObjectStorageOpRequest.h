/*
 * This header is generated by weak_classdump 0.2
 * on Monday, June 23, 2014 at 9:15:50 PM Eastern European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */


@protocol NLObjectStorageOpRequest
@property (nonatomic,copy) id completionBlock; 
@property (nonatomic,copy) id failedBlock; 
@property (nonatomic,copy) id downloadProgressBlock; 
@property (nonatomic,copy) id uploadProgressBlock; 
@property (assign,nonatomic) id<NLObjectStorageOpProgressDelegate> uploadProgressDelegate; 
@property (nonatomic,copy) NSDictionary* requestHeaders; 
@property (nonatomic,copy) int responseStatusCode; 
@property (nonatomic,copy) NSDictionary* responseHeaders; 
@property (nonatomic,copy) NSString* responseString; 
@property (nonatomic,copy) NSData* responseData; 
@property (nonatomic,copy) NSError* error; 
@property (nonatomic,copy) BOOL isCancelled; 
@property (nonatomic,copy) BOOL isFinished; 
@property (nonatomic,retain) NSString* downloadDestinationPath; 
@property (nonatomic,retain) NSString* temporaryFileDownloadPath; 
@property (nonatomic,retain) NSString* temporaryFileUploadPath; 
@required
+(BOOL)isNetworkError(id):arg1 ;
+(BOOL)isCanceledError(id):arg1 ;
-(void)setUploadProgressDelegate(id):arg1 ;
-(void)addRequestHeader(id):arg1 value(id):arg2 ;
-(void)setShouldContinueWhenAppEntersBackground(BOOL):arg1 ;
-(void)setTimeOutSeconds(double):arg1 ;
-(void)setShouldAttemptPersistentConnection(BOOL):arg1 ;
-(void)setNumberOfTimesToRetryOnTimeout(int):arg1 ;
-(void)setPostBody(id):arg1 ;
-(void)setPostValue(id):arg1 forKey(id):arg2 ;
-(void)setFile(id):arg1 forKey(id):arg2 ;
-(void)setUserAgentString(id):arg1 ;
-(id)requestHeaders;
-(id)responseString;
-(void)clearDelegatesAndCancel;
-(void)setShouldStreamPostDataFromDisk(BOOL):arg1 ;
-(void)setPostBodyFilePath(id):arg1 ;
-(id)downloadDestinationPath;
-(void)setDownloadDestinationPath(id):arg1 ;
-(id)temporaryFileDownloadPath;
-(void)setTemporaryFileDownloadPath(id):arg1 ;
-(void)removeTemporaryDownloadFile;
-(id);
-(void)setFailedBlock(id):arg1 ;
-(id);
-(id);
-(id)uploadProgressDelegate;
-(id)retryOperationWith(id):arg1 ;
-(id)requestOperationWith(id):arg1 ;
-(id)requestOperation;
-(id)initWithURL(id):arg1 uploadFormData(BOOL):arg2 ;
-(void)setPostBodyString(id):arg1 ;
-(void)setPostBodyParameters(id):arg1 ;
-(void)removeTemporaryUploadFile;
-(void)setDownloadProgressBlock(id):arg1 ;
-(void)setUploadProgressBlock(id):arg1 ;
-(id)temporaryFileUploadPath;
-(void)setTemporaryFileUploadPath(id):arg1 ;
-(id);
-(void)setCachePolicy(unsigned):arg1 ;
-(id)responseData;
-(void)setRequestMethod(id):arg1 ;
-(id)userInfo;
-(BOOL)isCancelled;
-(void)cancel;
-(void)setCompletionBlock(id):arg1 ;
-(void)setUserInfo(id):arg1 ;
-(BOOL)isFinished;
-(int)responseStatusCode;
-(id)responseHeaders;
-(id)requestURL;
-(id)error;
-(void)setUploadProgressDelegate(id):arg1 ;
-(void)addRequestHeader(id):arg1 value(id):arg2 ;
-(void)setShouldContinueWhenAppEntersBackground(BOOL):arg1 ;
-(void)setTimeOutSeconds(double):arg1 ;
-(void)setShouldAttemptPersistentConnection(BOOL):arg1 ;
-(void)setNumberOfTimesToRetryOnTimeout(int):arg1 ;
-(void)setPostBody(id):arg1 ;
-(void)setPostValue(id):arg1 forKey(id):arg2 ;
-(void)setFile(id):arg1 forKey(id):arg2 ;
-(void)setUserAgentString(id):arg1 ;
-(id)requestHeaders;
-(id)responseString;
-(void)clearDelegatesAndCancel;
-(void)setShouldStreamPostDataFromDisk(BOOL):arg1 ;
-(void)setPostBodyFilePath(id):arg1 ;
-(id)downloadDestinationPath;
-(void)setDownloadDestinationPath(id):arg1 ;
-(id)temporaryFileDownloadPath;
-(void)setTemporaryFileDownloadPath(id):arg1 ;
-(void)removeTemporaryDownloadFile;
-(id);
-(void)setFailedBlock(id):arg1 ;
-(id);
-(id);
-(id)uploadProgressDelegate;
-(id)retryOperationWith(id):arg1 ;
-(id)requestOperationWith(id):arg1 ;
-(id)requestOperation;
-(id)initWithURL(id):arg1 uploadFormData(BOOL):arg2 ;
-(void)setPostBodyString(id):arg1 ;
-(void)setPostBodyParameters(id):arg1 ;
-(void)removeTemporaryUploadFile;
-(void)setDownloadProgressBlock(id):arg1 ;
-(void)setUploadProgressBlock(id):arg1 ;
-(id)temporaryFileUploadPath;
-(void)setTemporaryFileUploadPath(id):arg1 ;
-(id);
-(void)setCachePolicy(unsigned):arg1 ;
-(id)responseData;
-(void)setRequestMethod(id):arg1 ;
-(id)userInfo;
-(BOOL)isCancelled;
-(void)cancel;
-(void)setCompletionBlock(id):arg1 ;
-(void)setUserInfo(id):arg1 ;
-(BOOL)isFinished;
-(int)responseStatusCode;
-(id)responseHeaders;
-(id)requestURL;
-(id)error;
@end
