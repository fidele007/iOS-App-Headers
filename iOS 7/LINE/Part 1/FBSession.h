/*
 * This header is generated by weak_classdump 0.2
 * on Monday, June 23, 2014 at 9:15:56 PM Eastern European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <FBLoginDialogDelegate.h>

@interface FBSession : NSObject <FBLoginDialogDelegate> {
	NSString* _urlSchemeSuffix; 
	BOOL _isInStateTransition; 
	int _loginTypeOfPendingOpenUrlCallback; 
	int _defaultDefaultAudience; 
	BOOL _isRepairing; 
	int _state; 
	NSString* _appID; 
	FBAccessTokenData* _accessTokenData; 
	NSArray* _initializedPermissions; 
	int _lastRequestedSystemAudience; 
	FBSessionTokenCachingStrategy* _tokenCachingStrategy; 
	NSDate* _attemptedRefreshDate; 
	NSDate* _attemptedPermissionsRefreshDate; 
	id _loginHandler; 
	id _reauthorizeHandler; 
	FBLoginDialog* _loginDialog; 
	NSThread* _affinitizedThread; 
	FBSessionAppEventsState* _appEventsState; 
	FBSessionAuthLogger* _authLogger; 
}
@property (copy) BOOL isOpen; 
@property (assign) int state; 				//@synthesize state=_state - In the implementation block
@property (copy) NSString* appID; 				//@synthesize appID=_appID - In the implementation block
@property (copy) NSString* urlSchemeSuffix; 
@property (copy,copy) NSString* accessToken; 
@property (copy,copy) NSDate* expirationDate; 
@property (copy,copy) NSArray* permissions; 
@property (copy) int loginType; 
@property (copy) FBAccessTokenData* accessTokenData; 				//@synthesize accessTokenData=_accessTokenData - In the implementation block
@property (copy) NSArray* initializedPermissions; 				//@synthesize initializedPermissions=_initializedPermissions - In the implementation block
@property (assign) int lastRequestedSystemAudience; 				//@synthesize lastRequestedSystemAudience=_lastRequestedSystemAudience - In the implementation block
@property (assign) BOOL isRepairing; 				//@synthesize isRepairing=_isRepairing - In the implementation block
@property (retain) FBSessionTokenCachingStrategy* tokenCachingStrategy; 				//@synthesize tokenCachingStrategy=_tokenCachingStrategy - In the implementation block
@property (copy) NSDate* attemptedRefreshDate; 				//@synthesize attemptedRefreshDate=_attemptedRefreshDate - In the implementation block
@property (copy) NSDate* attemptedPermissionsRefreshDate; 				//@synthesize attemptedPermissionsRefreshDate=_attemptedPermissionsRefreshDate - In the implementation block
@property (copy) id loginHandler; 				//@synthesize loginHandler=_loginHandler - In the implementation block
@property (copy) id reauthorizeHandler; 				//@synthesize reauthorizeHandler=_reauthorizeHandler - In the implementation block
@property (copy) NSString* appBaseUrl; 
@property (retain) FBLoginDialog* loginDialog; 				//@synthesize loginDialog=_loginDialog - In the implementation block
@property (retain) NSThread* affinitizedThread; 				//@synthesize affinitizedThread=_affinitizedThread - In the implementation block
@property (retain) FBSessionAppEventsState* appEventsState; 				//@synthesize appEventsState=_appEventsState - In the implementation block
@property (retain) FBSessionAuthLogger* authLogger; 				//@synthesize authLogger=_authLogger - In the implementation block
+(id)activeSession;
+(id)defaultAppID;
+(id)activeSessionIfOpen;
+(id)defaultUrlSchemeSuffix;
+(BOOL)openActiveSessionWithPermissions:(id)arg1 allowLoginUI:(BOOL)arg2 allowSystemAccount:(BOOL)arg3 isRead:(BOOL)arg4 defaultAudience:(int)arg5 completionHandler:(id)arg6;
+(BOOL)openActiveSessionWithPermissions:(id)arg1 allowLoginUI:(BOOL)arg2 defaultAudience:(int)arg3 completionHandler:(id)arg4;
+(id)setActiveSession:(id)arg1 userInfo:(id)arg2;
+(void)setDefaultAppID:(id)arg1;
+(void)setDefaultUrlSchemeSuffix:(id)arg1;
+(id)sdkSurfacedErrorForNativeLoginError:(id)arg1;
+(BOOL)openActiveSessionWithAllowLoginUI:(BOOL)arg1;
+(BOOL)openActiveSessionWithPermissions:(id)arg1 allowLoginUI:(BOOL)arg2 completionHandler:(id)arg3;
+(BOOL)openActiveSessionWithReadPermissions:(id)arg1 allowLoginUI:(BOOL)arg2 completionHandler:(id)arg3;
+(BOOL)openActiveSessionWithPublishPermissions:(id)arg1 defaultAudience:(int)arg2 allowLoginUI:(BOOL)arg3 completionHandler:(id)arg4;
+(void)renewSystemCredentials:(id)arg1;
+(id)activeSessionIfExists;
+(BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+(id)setActiveSession:(id)arg1;
-(BOOL)handleOpenURL:(id)arg1;
-(id)initWithPermissions:(id)arg1;
-(void)openWithBehavior:(int)arg1 completionHandler:(id)arg2;
-(void)closeAndClearTokenInformation;
-(id)refreshDate;
-(id)initWithAppID:(id)arg1 permissions:(id)arg2 urlSchemeSuffix:(id)arg3 tokenCacheStrategy:(id)arg4;
-(void)clearAffinitizedThread;
-(void)refreshAccessToken:(id)arg1 expirationDate:(id)arg2;
-(void)closeAndClearTokenInformation:(id)arg1;
-(BOOL)shouldExtendAccessToken;
-(BOOL)shouldRefreshPermissions;
-(void)refreshPermissions:(id)arg1;
-(id)initWithAppID:(id)arg1 permissions:(id)arg2 defaultAudience:(int)arg3 urlSchemeSuffix:(id)arg4 tokenCacheStrategy:(id)arg5;
-(BOOL)initializeFromCachedToken:(id)arg1 withPermissions:(id)arg2;
-(BOOL)transitionToState:(int)arg1 withAccessTokenData:(id)arg2 shouldCache:(BOOL)arg3;
-(void)checkThreadAffinity;
-(void)setLoginHandler:(id)arg1;
-(void)authorizeWithPermissions:(id)arg1 behavior:(int)arg2 defaultAudience:(int)arg3 isReauthorize:(BOOL)arg4;
-(void)transitionAndCallHandlerWithState:(int)arg1 error:(id)arg2 tokenData:(id)arg3 shouldCache:(BOOL)arg4;
-(void)reauthorizeWithPermissions:(id)arg1 isRead:(BOOL)arg2 behavior:(int)arg3 defaultAudience:(int)arg4 completionHandler:(id)arg5;
-(void)requestNewReadPermissions:(id)arg1 completionHandler:(id)arg2;
-(void)requestNewPublishPermissions:(id)arg1 defaultAudience:(int)arg2 completionHandler:(id)arg3;
-(void)setAuthLogger:(id)arg1;
-(BOOL)handleAuthorizationOpen:(id)arg1 accessToken:(id)arg2 loginType:(int)arg3;
-(BOOL)handleReauthorize:(id)arg1 accessToken:(id)arg2;
-(BOOL)handleAuthorizationCallbacks:(id)arg1 params:(id)arg2 loginType:(int)arg3;
-(BOOL)openFromAccessTokenData:(id)arg1 completionHandler:(id)arg2 raiseExceptionIfInvalidState:(BOOL)arg3;
-(void)authorizeRequestWasImplicitlyCancelled;
-(void)handleDidBecomeActive;
-(void)setAccessTokenData:(id)arg1;
-(void)authorizeWithPermissions:(id)arg1 defaultAudience:(int)arg2 integratedAuth:(BOOL)arg3 FBAppAuth:(BOOL)arg4 safariAuth:(BOOL)arg5 fallback:(BOOL)arg6 isReauthorize:(BOOL)arg7 canFetchAppSettings:(BOOL)arg8;
-(void)retryableAuthorizeWithPermissions:(id)arg1 defaultAudience:(int)arg2 integratedAuth:(BOOL)arg3 FBAppAuth:(BOOL)arg4 safariAuth:(BOOL)arg5 fallback:(BOOL)arg6 isReauthorize:(BOOL)arg7 canFetchAppSettings:(BOOL)arg8;
-(id)errorLoginFailedWithReason:(id)arg1 errorCode:(id)arg2 innerError:(id)arg3;
-(void)setLastRequestedSystemAudience:(int)arg1;
-(id)getSystemAccountStoreAdapter;
-(void)logIntegratedAuthAppEvent:(id)arg1 permissions:(id)arg2;
-(void)completeReauthorizeWithAccessToken:(id)arg1 expirationDate:(id)arg2 permissions:(id)arg3;
-(void)setIsRepairing:(BOOL)arg1;
-(void)callReauthorizeHandlerAndClearState:(id)arg1;
-(void)handleDidCompleteNativeLoginForAppCall:(id)arg1;
-(BOOL)tryOpenURL:(id)arg1;
-(void)setLoginDialog:(id)arg1;
-(id)errorLoginFailedWithReason:(id)arg1 errorCode:(id)arg2 innerError:(id)arg3 localizedDescription:(id)arg4;
-(void)validateReauthorizedAccessToken:(id)arg1 expirationDate:(id)arg2;
-(void)setReauthorizeHandler:(id)arg1;
-(void)setAttemptedRefreshDate:(id)arg1;
-(void)setAttemptedPermissionsRefreshDate:(id)arg1;
-(void)setAffinitizedThread:(id)arg1;
-(void)fbDialogLogin:(id)arg1 expirationDate:(id)arg2;
-(void)fbDialogNotLogin:(BOOL)arg1;
-(void)reauthorizeWithPermissions:(id)arg1 behavior:(int)arg2 completionHandler:(id)arg3;
-(void)reauthorizeWithReadPermissions:(id)arg1 completionHandler:(id)arg2;
-(void)reauthorizeWithPublishPermissions:(id)arg1 defaultAudience:(int)arg2 completionHandler:(id)arg3;
-(BOOL)openFromAccessTokenData:(id)arg1 completionHandler:(id)arg2;
-(void)setUrlSchemeSuffix:(id)arg1;
-(void)setStateChangeHandler:(id)arg1;
-(void)setLoginTypeOfPendingOpenUrlCallback:(int)arg1;
-(void)authorizeUsingSystemAccountStore:(id)arg1 defaultAudience:(int)arg2 isReauthorize:(BOOL)arg3;
-(id)authorizeUsingFacebookNativeLoginWithPermissions:(id)arg1 defaultAudience:(int)arg2 clientState:(id)arg3;
-(BOOL)isURLSchemeRegistered;
-(BOOL)authorizeUsingFacebookApplication:(id)arg1;
-(BOOL)authorizeUsingSafari:(id)arg1;
-(void)authorizeUsingLoginDialog:(id)arg1;
-(void)repairWithHandler:(id)arg1;
-(id)jsonClientStateWithDictionary:(id)arg1;
-(void)setInitializedPermissions:(id)arg1;
-(void)setTokenCachingStrategy:(id)arg1;
-(void)setAppEventsState:(id)arg1;
-(void)dealloc;
-(id)description;
-(void)setState:(int)arg1;
-(void)close;
-(void)openWithCompletionHandler:(id)arg1;
-(void)setAppID:(id)arg1;
@end