/*
 * This header is generated by weak_classdump 0.2
 * on Monday, June 23, 2014 at 9:09:34 PM Eastern European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */


@protocol UIApplicationDelegate
@property (nonatomic,retain) UIWindow* window; 
@optional
-(id)window;
-(BOOL)application(id):arg1 handleOpenURL(id):arg2 ;
-(BOOL)application(id):arg1 openURL(id):arg2 sourceApplication(id):arg3 annotation(id):arg4 ;
-(void)applicationDidReceiveMemoryWarning(id):arg1 ;
-(void)applicationWillTerminate(id):arg1 ;
-(void)applicationSignificantTimeChange(id):arg1 ;
-(void)application(id):arg1 willChangeStatusBarOrientation(int):arg2 duration(double):arg3 ;
-(void)application(id):arg1 didChangeStatusBarOrientation(int):arg2 ;
-(void)application(id):arg1 willChangeStatusBarFrame({):arg2 ;
-(void)application(id):arg1 didChangeStatusBarFrame({):arg2 ;
-(void)applicationDidBecomeActive(id):arg1 ;
-(void)applicationWillResignActive(id):arg1 ;
-(void)applicationDidEnterBackground(id):arg1 ;
-(void)applicationWillEnterForeground(id):arg1 ;
-(BOOL)application(id):arg1 shouldSaveApplicationState(id):arg2 ;
-(BOOL)application(id):arg1 shouldRestoreApplicationState(id):arg2 ;
-(unsigned)application(id):arg1 supportedInterfaceOrientationsForWindow(id):arg2 ;
-(BOOL)application(id):arg1 willFinishLaunchingWithOptions(id):arg2 ;
-(BOOL)application(id):arg1 didFinishLaunchingWithOptions(id):arg2 ;
-(void)applicationDidFinishLaunching(id):arg1 ;
-(void)application(id):arg1 didReceiveRemoteNotification(id):arg2 ;
-(void)application(id):arg1 didReceiveLocalNotification(id):arg2 ;
-(void)setWindow(id):arg1 ;
-(void)application(id):arg1 didReceiveRemoteNotification(id):arg2 fetchCompletionHandler(id):arg3 ;
-(void)application(id):arg1 handleEventsForBackgroundURLSession(id):arg2 completionHandler(id):arg3 ;
-(void)application(id):arg1 performFetchWithCompletionHandler(id):arg2 ;
-(void)application(id):arg1 willEncodeRestorableStateWithCoder(id):arg2 ;
-(id)application(id):arg1 viewControllerWithRestorationIdentifierPath(id):arg2 coder(id):arg3 ;
-(void)application(id):arg1 didDecodeRestorableStateWithCoder(id):arg2 ;
-(void)applicationProtectedDataWillBecomeUnavailable(id):arg1 ;
-(void)applicationProtectedDataDidBecomeAvailable(id):arg1 ;
-(void)application(id):arg1 didRegisterForRemoteNotificationsWithDeviceToken(id):arg2 ;
-(void)application(id):arg1 didFailToRegisterForRemoteNotificationsWithError(id):arg2 ;
@end

@protocol NSFetchedResultsControllerDelegate
@optional
-(void)controller(id):arg1 didChangeObject(id):arg2 atIndexPath(id):arg3 forChangeType(unsigned):arg4 newIndexPath(id):arg5 ;
-(void)controller(id):arg1 didChangeSection(id):arg2 atIndex(unsigned):arg3 forChangeType(unsigned):arg4 ;
-(void)controllerDidChangeContent(id):arg1 ;
-(void)controllerWillChangeContent(id):arg1 ;
-(id)controller(id):arg1 sectionIndexTitleForSectionName(id):arg2 ;
@end

@protocol PasscodeViewControllerDelegate
@optional
-(void)passcodeViewControllerUnlocked(id):arg1 ;
-(void)passcodeViewControllerCancelled(id):arg1 ;
-(void)passcodeViewControllerRejected(id):arg1 ;
-(void)passcodeViewControllerDidChangePasscode(id):arg1 ;
@end

@protocol UITabBarControllerDelegate
@optional
-(void)tabBarController(id):arg1 didSelectViewController(id):arg2 ;
-(int)tabBarControllerPreferredInterfaceOrientationForPresentation(id):arg1 ;
-(unsigned)tabBarControllerSupportedInterfaceOrientations(id):arg1 ;
-(void)tabBarController(id):arg1 willBeginCustomizingViewControllers(id):arg2 ;
-(void)tabBarController(id):arg1 willEndCustomizingViewControllers(id):arg2 changed(BOOL):arg3 ;
-(void)tabBarController(id):arg1 didEndCustomizingViewControllers(id):arg2 changed(BOOL):arg3 ;
-(BOOL)tabBarController(id):arg1 shouldSelectViewController(id):arg2 ;
-(id)tabBarController(id):arg1 interactionControllerForAnimationController(id):arg2 ;
-(id)tabBarController(id):arg1 animationControllerForTransitionFromViewController(id):arg2 toViewController(id):arg3 ;
@end

@protocol UINavigationControllerDelegate
@optional
-(void)navigationController(id):arg1 willShowViewController(id):arg2 animated(BOOL):arg3 ;
-(void)navigationController(id):arg1 didShowViewController(id):arg2 animated(BOOL):arg3 ;
-(id)navigationController(id):arg1 animationControllerForOperation(int):arg2 fromViewController(id):arg3 toViewController(id):arg4 ;
-(id)navigationController(id):arg1 interactionControllerForAnimationController(id):arg2 ;
-(unsigned)navigationControllerSupportedInterfaceOrientations(id):arg1 ;
-(int)navigationControllerPreferredInterfaceOrientationForPresentation(id):arg1 ;
@end

@protocol UIAlertViewDelegate
@optional
-(void)alertView(id):arg1 clickedButtonAtIndex(int):arg2 ;
-(void)alertView(id):arg1 didDismissWithButtonIndex(int):arg2 ;
-(void)alertViewCancel(id):arg1 ;
-(BOOL)alertViewShouldEnableFirstOtherButton(id):arg1 ;
-(void)didPresentAlertView(id):arg1 ;
-(void)willPresentAlertView(id):arg1 ;
-(void)alertView(id):arg1 willDismissWithButtonIndex(int):arg2 ;
@end

@protocol BWQuincyManagerDelegate
@optional
-(id)crashReportUserID;
-(id)crashReportContact;
-(id)crashReportDescription;
-(void)connectionOpened;
-(void)connectionClosed;
-(void)willShowSubmitCrashReportAlert;
-(void)userDidChooseSendAlways;
@end
