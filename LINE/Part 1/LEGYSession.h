/*
 * This header is generated by weak_classdump 0.2
 * on Monday, June 23, 2014 at 9:09:03 PM Eastern European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <LEGYProtocolProviderDelegate.h>
#import <LEGYProtocolDelegate.h>

@interface LEGYSession : NSObject <LEGYProtocolProviderDelegate, LEGYProtocolDelegate> {
	LEGYProtocolProvider* _protocolProvider; 
	unsigned _behavior; 
	id<LEGYProtocolProviderDelegate> _delegate; 
	id _connectionTimeoutTimer; 
	NSDate* _connectionTimeoutTimerFireDate; 
	NSMutableArray* _requestsSending; 
	NSMutableArray* _requestsPending; 
	NSMutableDictionary* _headerFields; 
	LEGYSessionStatusNotifier* _sessionStatusNotifier; 
	double _resendTimeLimit; 
	unsigned long long _resendWithinTimeLimitRequestStart; 
	unsigned _resendWithinTimeLimitRequestCount; 
	id _estabilished; 
}
@property (assign,nonatomic) id<LEGYProtocolProviderDelegate> delegate; 				//@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) LEGYProtocolProvider* protocolProvider; 				//@synthesize protocolProvider=_protocolProvider - In the implementation block
@property (nonatomic,copy) id estabilished; 				//@synthesize estabilished=_estabilished - In the implementation block
@property (assign,nonatomic) double resendTimeLimit; 				//@synthesize resendTimeLimit=_resendTimeLimit - In the implementation block
@property (nonatomic,copy) LEGYSessionStatusNotifier* sessionStatusNotifier; 
-(void)setResendTimeLimit:(double)arg1;
-(void)protocol:(id)arg1 didReceiveSessionKey:(id)arg2;
-(void)_startIfNotStartedConnectionTimeout:(double)arg1;
-(void)legy_endPendingRequest:(id)arg1 withStatusCode:(unsigned)arg2;
-(void)legy_showNetworkActivityIndicatorForRequest:(id)arg1;
-(void)_setResendStartTimeAsNecessary;
-(void)queueRequest:(id)arg1;
-(void)legy_cleanupRequest:(id)arg1 withError:(id)arg2 forReuse:(BOOL)arg3 keepResumed:(BOOL)arg4;
-(void)legy_hideNetworkActivityIndicatorForRequest:(id)arg1;
-(void)_resetResendStartTimeAsNecessary;
-(void)queueRequests:(id)arg1;
-(void)_connectionTimedOut;
-(id)initWithProtocolProvider:(id)arg1 behavior:(unsigned)arg2;
-(void)addHeaderFieldsFromDictionary:(id)arg1;
-(void)removeHeaderFieldForKey:(id)arg1;
-(void)setEstabilished:(id)arg1;
-(void)protocolHandshakeReciprocated:(id)arg1;
-(void)protocol:(id)arg1 didSendRequest:(id)arg2;
-(void)protocol:(id)arg1 didReceiveResponse:(id)arg2;
-(void)protocolProviderDidComeOnline;
-(void)protocolProviderDidGoOffline;
-(void)protocolGracefullyDisconnecting:(id)arg1;
-(void)protocolProviderWillGoOffline:(id)arg1;
-(void)protocol:(id)arg1 usableWithTypes:(unsigned)arg2;
-(void)protocolUnusable:(id)arg1;
-(void)protocolProviderExhaustedConnectionsForRequestTypes:(unsigned)arg1;
-(void)setDelegate:(id)arg1;
-(id)init;
-(void)cancelRequest:(id)arg1;
-(void).cxx_destruct;
-(void)cancelAllRequests;
@end