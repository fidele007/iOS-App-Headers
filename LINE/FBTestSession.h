/*
 * This header is generated by weak_classdump 0.2
 * on Monday, June 23, 2014 at 9:15:09 PM Eastern European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */


@interface FBTestSession : FBSession {
	BOOL _forceAccessTokenRefresh; 
	BOOL _disableReauthorize; 
	NSString* _appAccessToken; 
	NSString* _testUserID; 
	NSString* _testAppID; 
	NSString* _testAppSecret; 
	int _mode; 
	NSString* _machineUniqueUserKey; 
	NSString* _sessionUniqueUserTag; 
}
@property (copy) NSString* appAccessToken; 				//@synthesize appAccessToken=_appAccessToken - In the implementation block
@property (copy) NSString* testUserID; 				//@synthesize testUserID=_testUserID - In the implementation block
@property (copy) NSString* testAppID; 				//@synthesize testAppID=_testAppID - In the implementation block
@property (copy) NSString* testAppSecret; 				//@synthesize testAppSecret=_testAppSecret - In the implementation block
@property (assign) BOOL disableReauthorize; 				//@synthesize disableReauthorize=_disableReauthorize - In the implementation block
@property (copy) NSString* machineUniqueUserTag; 				//@synthesize machineUniqueUserKey=_machineUniqueUserKey - In the implementation block
@property (copy) NSString* sessionUniqueUserTag; 				//@synthesize sessionUniqueUserTag=_sessionUniqueUserTag - In the implementation block
@property (copy,copy) NSString* permissionsString; 
@property (copy,copy) NSString* sharedTestUserIdentifier; 
@property (assign) int mode; 				//@synthesize mode=_mode - In the implementation block
+(void)deleteUnitTestUser:(id)arg1 accessToken:(id)arg2;
+(id)sessionForUnitTestingWithPermissions:(id)arg1 mode:(int)arg2 sessionUniqueUserTag:(id)arg3;
+(id)sessionWithSharedUserWithPermissions:(id)arg1 uniqueUserTag:(id)arg2;
+(id)sessionWithSharedUserWithPermissions:(id)arg1;
+(id)sessionWithPrivateUserWithPermissions:(id)arg1;
-(BOOL)shouldExtendAccessToken;
-(BOOL)transitionToState:(int)arg1 withAccessTokenData:(id)arg2 shouldCache:(BOOL)arg3;
-(void)authorizeWithPermissions:(id)arg1 behavior:(int)arg2 defaultAudience:(int)arg3 isReauthorize:(BOOL)arg4;
-(void)setTestAppID:(id)arg1;
-(void)setTestAppSecret:(id)arg1;
-(void)setMachineUniqueUserTag:(id)arg1;
-(void)setSessionUniqueUserTag:(id)arg1;
-(void)setAppAccessToken:(id)arg1;
-(void)setTestUserID:(id)arg1;
-(void)transitionToOpenWithToken:(id)arg1;
-(void)raiseException:(id)arg1;
-(void)populateTestUsers:(id)arg1 testAccounts:(id)arg2;
-(void)findOrCreateSharedUser;
-(id)validNameStringFromInteger:(unsigned)arg1;
-(void)createNewTestUser;
-(void)retrieveTestUsersForApp;
-(BOOL)forceAccessTokenRefresh;
-(void)setForceAccessTokenRefresh:(BOOL)arg1;
-(id)initWithAppID:(id)arg1 appSecret:(id)arg2 machineUniqueUserTag:(id)arg3 sessionUniqueUserTag:(id)arg4 mode:(int)arg5 permissions:(id)arg6 tokenCachingStrategy:(id)arg7;
-(void)setDisableReauthorize:(BOOL)arg1;
-(void)dealloc;
-(void)setMode:(int)arg1;
@end