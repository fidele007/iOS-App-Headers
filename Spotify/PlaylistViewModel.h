/*
 * This header is generated by weak_classdump 0.2
 * on Wednesday, April 30, 2014 at 2:22:06 PM Central European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <SPPopcountLookupDelegate.h>
#import <SPTThemableViewLayoutDelegate.h>
#import <UITableViewDataSource.h>

@interface PlaylistViewModel : NSObject <SPPopcountLookupDelegate, SPTThemableViewLayoutDelegate, UITableViewDataSource> {
	BOOL _totalDurationLoaded; 
	BOOL _showsAvailableOfflineRow; 
	BOOL _playlistIsAllTracksInFolder; 
	BOOL _numberOfSubscribersLoaded; 
	BOOL _ignoreNextContextTracksUpdate; 
	id<PlaylistViewModelDelegate> _delegate; 
	SessionController* _sessionController; 
	SPTrackContext* _context; 
	SPPlaylist* _playlist; 
	SPUser* _playlistOwner; 
	NSDate* _playlistLastEditedDate; 
	int _numberOfSubscribers; 
	SPPlaylistContainer* _folder; 
	UISwitch* _availableOfflineSwitch; 
	id<ShuffleControllerObjC> _shuffleController; 
	SPPopcountLookup* _popcountLookup; 
	double _totalDuration; 
}
@property (assign,nonatomic,__weak) id<PlaylistViewModelDelegate> delegate; 				//@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) SessionController* sessionController; 				//@synthesize sessionController=_sessionController - In the implementation block
@property (nonatomic,retain) SPTrackContext* context; 				//@synthesize context=_context - In the implementation block
@property (nonatomic,retain) SPPlaylist* playlist; 				//@synthesize playlist=_playlist - In the implementation block
@property (nonatomic,retain) SPUser* playlistOwner; 				//@synthesize playlistOwner=_playlistOwner - In the implementation block
@property (nonatomic,retain) NSDate* playlistLastEditedDate; 				//@synthesize playlistLastEditedDate=_playlistLastEditedDate - In the implementation block
@property (nonatomic,copy) NSString* numberOfSubscribersText; 
@property (assign,nonatomic) int numberOfSubscribers; 				//@synthesize numberOfSubscribers=_numberOfSubscribers - In the implementation block
@property (assign,nonatomic) double totalDuration; 				//@synthesize totalDuration=_totalDuration - In the implementation block
@property (assign,nonatomic) BOOL totalDurationLoaded; 				//@synthesize totalDurationLoaded=_totalDurationLoaded - In the implementation block
@property (nonatomic,copy) NSURL* playlistImageURL; 
@property (nonatomic,retain) SPPlaylistContainer* folder; 				//@synthesize folder=_folder - In the implementation block
@property (assign,nonatomic) BOOL showsAvailableOfflineRow; 				//@synthesize showsAvailableOfflineRow=_showsAvailableOfflineRow - In the implementation block
@property (assign,getter=isAvailableOffline,nonatomic) BOOL availableOffline; 
@property (nonatomic,retain) UISwitch* availableOfflineSwitch; 				//@synthesize availableOfflineSwitch=_availableOfflineSwitch - In the implementation block
@property (nonatomic,copy) BOOL playlistIsOwnedByCurrentUser; 
@property (nonatomic,copy) BOOL playlistCanBeEditedByCurrentUser; 
@property (assign,nonatomic) BOOL playlistIsFollowedByCurrentUser; 
@property (nonatomic,copy) BOOL playlistIsAllTracksInFolder; 				//@synthesize playlistIsAllTracksInFolder=_playlistIsAllTracksInFolder - In the implementation block
@property (assign,nonatomic) BOOL numberOfSubscribersLoaded; 				//@synthesize numberOfSubscribersLoaded=_numberOfSubscribersLoaded - In the implementation block
@property (assign,nonatomic) BOOL ignoreNextContextTracksUpdate; 				//@synthesize ignoreNextContextTracksUpdate=_ignoreNextContextTracksUpdate - In the implementation block
@property (assign,nonatomic,__weak) id<ShuffleControllerObjC> shuffleController; 				//@synthesize shuffleController=_shuffleController - In the implementation block
@property (nonatomic,retain) SPPopcountLookup* popcountLookup; 				//@synthesize popcountLookup=_popcountLookup - In the implementation block
-(id)playlistContext;
-(void)themableViewDidUpdateLayout:(id)arg1;
-(void)setPlaylist:(id)arg1;
-(BOOL)canRemoveObjectAtIndexPath:(id)arg1;
-(void)removeObjectAtIndexPath:(id)arg1;
-(void)setSessionController:(id)arg1;
-(void)setShuffleController:(id)arg1;
-(void)setAvailableOfflineSwitch:(id)arg1;
-(void)setAvailableOffline:(BOOL)arg1;
-(void)setNumberOfSubscribers:(int)arg1;
-(void)updateFollowerCount;
-(id)trackAtIndex:(unsigned)arg1;
-(void)setPlaylistIsFollowedByCurrentUser:(BOOL)arg1;
-(void)setShowsAvailableOfflineRow:(BOOL)arg1;
-(unsigned)offlineSyncStatusForIndexPath:(id)arg1;
-(void)metadataDidChange;
-(void)contextDidLoad;
-(void)contextTracksDidChange;
-(void)nowPlayingTrackDidChange;
-(void)hideUnplayableTracksSettingDidChange;
-(void)setPopcountLookup:(id)arg1;
-(void)setPlaylistLastEditedDate:(id)arg1;
-(void)setTotalDurationLoaded:(BOOL)arg1;
-(id)offlineStateObject;
-(void)availableOfflineStateChanged;
-(void)setIgnoreNextContextTracksUpdate:(BOOL)arg1;
-(void)setNumberOfSubscribersLoaded:(BOOL)arg1;
-(void)tableViewCellContextMenuButtonTapped:(id)arg1;
-(void)availableOfflineSwitchValueChanged:(id)arg1;
-(BOOL)shouldShowShuffleHeaderCell;
-(id)ownerNameForTrackAtIndex:(unsigned)arg1;
-(id)subtitleForTrack:(id)arg1 withOwnerName:(id)arg2;
-(id)accessoryViewForIndexPath:(id)arg1;
-(BOOL)contextIsCurrentlyPlaying;
-(void)logUserHitClientEventWithEventVersion:(id)arg1;
-(id)loggingSource;
-(void)popCountLookup:(id)arg1 didFindSubscribers:(id)arg2 totalNumberOfSubscribers:(int)arg3;
-(void)popCountLookup:(id)arg1 didFailWithError:(id)arg2;
-(id)initWithContext:(id)arg1 playlist:(id)arg2 folder:(id)arg3 entityURL:(id)arg4 sessionController:(id)arg5 shuffleController:(id)arg6;
-(void)setPlaylistOwner:(id)arg1;
-(void)dealloc;
-(void)setDelegate:(id)arg1;
-(int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
-(id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
-(int)numberOfSectionsInTableView:(id)arg1;
-(BOOL)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
-(BOOL)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
-(void)tableView:(id)arg1 commitEditingStyle:(int)arg2 forRowAtIndexPath:(id)arg3;
-(void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
-(void)setContext:(id)arg1;
-(void)viewDidLoad;
-(void)setFolder:(id)arg1;
-(void)setTotalDuration:(double)arg1;
-(void)viewWillAppear;
-(void)viewDidDisappear;
-(void).cxx_destruct;
@end