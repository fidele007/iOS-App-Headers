/*
 * This header is generated by weak_classdump 0.2
 * on Wednesday, April 30, 2014 at 2:25:44 PM Central European Summer Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <SPTCoreLoginController.h>
#import <SPTCoreStreamingRulesController.h>
#import <SPTCoreEventProcessingController.h>

@interface SPCore : NSObject <SPTCoreLoginController, SPTCoreStreamingRulesController, SPTCoreEventProcessingController> {
	struct Core* _core; 
	struct Prefs* _prefs; 
	NSMutableSet* _supportedStreamingRules; 
	int _blockCoreProcessingCount; 
	double _coreWasBlockedAt; 
	struct scoped_connection _core_event_connection; 
	struct SPCoreCallbacks _coreCallbacks; 
	SPSession* _session; 
	id<SPTCoreLoginControllerDelegate> _loginControllerDelegate; 
	unsigned _allowCoreInEventTrackingRunloopCount; 
}
@property (nonatomic,retain) SPSession* session; 				//@synthesize session=_session - In the implementation block
@property (nonatomic,copy) NSString* deviceID; 
@property (assign,nonatomic) unsigned allowCoreInEventTrackingRunloopCount; 				//@synthesize allowCoreInEventTrackingRunloopCount=_allowCoreInEventTrackingRunloopCount - In the implementation block
@property (assign,nonatomic) id<SPTCoreLoginControllerDelegate> loginControllerDelegate; 				//@synthesize loginControllerDelegate=_loginControllerDelegate - In the implementation block
+(id)core;
+(void)setupUtil;
+(void)setupCore;
+(id)deviceModelDescription;
+(void)deleteDeviceID;
+(id)persistentCachePath;
+(id)volatileCachePath;
+(id)settingsPath;
+(struct Core*)createCoreWithPrefs:(struct Prefs*)arg1 persistentCachePath:(id)arg2 volatileCachePath:(id)arg3 settingsPath:(id)arg4;
+(id)legacyCachePath;
+(void)migrateCachesFromPath:(id)arg1 persistentPath:(id)arg2 volatilePath:(id)arg3;
+(id)volatileCacheRoot;
+(id)persistentCacheRoot;
+(void)markForBackupExclusion:(id)arg1;
-(void)dealloc;
-(struct Core*)cpp;
-(id)storedCredentials;
-(void)forgetStoredCredentials;
-(id)usersInCache;
-(void)loginWithCredentials:(id)arg1;
-(void)addSupportedStreamingRule:(id)arg1;
-(void)unblockCoreProcessing;
-(void)blockCoreProcessing;
-(void)setLoginControllerDelegate:(id)arg1;
-(void)eraseOfflineUser:(id)arg1;
-(void)requestSwitchUser:(id)arg1;
-(void)createAndMigratePathsForPersistentCache:(id)arg1 volatileCache:(id)arg2 settings:(id)arg3;
-(void)setStreamingRulesOnCore;
-(void)processGuiEventsAndReschedule;
-(BOOL)shouldProcessEvents;
-(void)setAllowCoreInEventTrackingRunloopCount:(unsigned)arg1;
-(id)errorForEvent:(struct EventInfo*)arg1;
-(void)wasLoggedIn;
-(void)processEvent:(struct EventInfo*)arg1;
-(void)wasLoggedOut;
-(id)supportedStreamingRules;
-(void)removeSupportedStreamingRule:(id)arg1;
-(void)disallowCoreInEventTrackingRunloop;
-(void)setShouldAutostartTrial:(BOOL)arg1;
-(void)setSession:(id)arg1;
-(id)init;
-(id).cxx_construct;
-(void)logout;
-(void).cxx_destruct;
@end